
const confidentialClientConfig = {
  auth: {
      clientId: process.env.APP_CLIENT_ID, 
      authority: process.env.SIGN_UP_SIGN_IN_POLICY_AUTHORITY, 
      clientSecret: process.env.APP_CLIENT_SECRET,
      knownAuthorities: [process.env.AUTHORITY_DOMAIN], //This must be an array
      redirectUri: process.env.APP_REDIRECT_URI,
      validateAuthority: false
  },
  system: {
      loggerOptions: {
          loggerCallback(loglevel, message, containsPii) {
              console.log(message);
          },
          piiLoggingEnabled: false,
          logLevel: msal.LogLevel.Verbose,
      }
  }
};

const confidentialClientApplication = new msal.ConfidentialClientApplication(confidentialClientConfig);

const APP_STATES = {
  LOGIN: 'login',
  LOGOUT: 'logout',
  PASSWORD_RESET: 'password_reset',
  EDIT_PROFILE : 'edit_profile'
}

const authCodeRequest = {
  redirectUri: confidentialClientConfig.auth.redirectUri,
};

const tokenRequest = {
  redirectUri: confidentialClientConfig.auth.redirectUri,
};
